<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mycookies.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.mycookies.pojo.po.CommentDO">
        <constructor>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="target_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="like_count" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="reply_uid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_deleted" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.mycookies.pojo.po.CommentDO">
        <constructor>
            <arg column="id" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="target_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="reply_uid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_deleted" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="like_count" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Blob_Column_List">
    id,
    user_id as userId,
    reply_uid as replyUid,
    content,
    like_count as likeCount,
    create_time as createTime
  </sql>
    <insert id="insert" parameterType="cn.mycookies.pojo.po.CommentDO">
    insert into blog_comment (user_id, target_id,
      reply_uid, content,
      is_deleted, create_time, update_time,
      id)
    values (#{userId,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER},
      #{replyUid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
      #{isDeleted,jdbcType=INTEGER},now(), now(),
      #{id,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" parameterType="cn.mycookies.pojo.po.CommentDO">
        insert into blog_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="targetId != null">
                target_id,
            </if>
            <if test="replyUid != null">
                reply_uid,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="sessionId != null">
                session_id,
            </if>
                 create_time,
                 update_time,
             <if test="id != null">
                id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="targetId != null">
                #{targetId,jdbcType=INTEGER},
            </if>
            <if test="replyUid != null">
                #{replyUid,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="sessionId != null">
                #{sessionId,jdbcType=INTEGER},
            </if>
                 now(),
                 now(),
             <if test="id != null">
                #{id,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateComment" parameterType="cn.mycookies.pojo.po.CommentDO">
        UPDATE blog_comment
        SET
        <trim suffixOverrides=",">
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                id_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </trim>
        where id=#{targetId,jdbcType=INTEGER}
    </update>
    <update id="likeComment" parameterType="cn.mycookies.pojo.po.CommentDO">
        UPDATE blog_comment
        SET like_count = like_count+1
        where id=#{targetId,jdbcType=INTEGER}
    </update>
    <delete id="deleteComment" parameterType="int">
      DELETE
      FROM blog_comment
      where id=#{id,jdbcType=INTEGER}
  </delete>
    <select id="selectCommentById" resultType="cn.mycookies.pojo.po.CommentDO">
        SELECT
        <include refid="Blob_Column_List"></include>
        FROM blog_comment
        WHERE is_deleted =0 AND id=#{id,jdbcType=INTEGER}
    </select>
    <!--查询评论 并关联用户信息-->
    <select id="selectComments" parameterType="cn.mycookies.pojo.po.CommentDO" resultType="cn.mycookies.pojo.vo.CommentVO">
        SELECT
            t.id,
            t.target_id as targetId,
            t.user_id as userId,
            u1.user_name as userName,
            u2.user_name as replyUserName,
            t.reply_uid as replyUid,
            t.content,
            t.like_count as likeCount,
            t.create_time as createTime,
            t.is_deleted as isDeleted,
            t.session_id as sessionId
        from blog_comment t
        LEFT JOIN user u1 ON t.user_id = u1.id
        LEFT JOIN user u2 ON t.reply_uid = u2.id
        <where>
            <if test="targetId != null">
               and t.target_id = #{targetId}
            </if>
            <if test="sessionId != null">
               and  t.session_id = #{sessionId}
            </if>
            <if test="userId != null">
                and t.user_id = #{user_id}
            </if>
            <if test="replyUid !=null">
                and t.reply_uid = #{replyUid}
            </if>
            <if test="isDeleted !=null">
                and t.is_deleted = #{isDeleted}
            </if>
        </where>
     </select>
</mapper>